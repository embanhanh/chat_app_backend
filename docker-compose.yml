services:
  # -----------------------
  # Redis Cluster Nodes
  # -----------------------
  redis1:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis1
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes          # Dev only
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1          # 1 replica mỗi master
      - REDIS_CLUSTER_CREATOR=yes         # chỉ node này tạo cluster
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - redis1:/bitnami/redis/data
    networks:
      - app-network

  # redis2…redis6 tương tự, chỉ bỏ REDIS_CLUSTER_CREATOR
  redis2:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis2
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1
    volumes:
      - redis2:/bitnami/redis/data
    networks:
      - app-network

  redis3:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis3
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1
    volumes:
      - redis3:/bitnami/redis/data
    networks:
      - app-network

  redis4:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis4
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1
    volumes:
      - redis4:/bitnami/redis/data
    networks:
      - app-network

  redis5:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis5
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1
    volumes:
      - redis5:/bitnami/redis/data
    networks:
      - app-network

  redis6:
    image: docker.io/bitnami/redis-cluster:7.4
    container_name: redis6
    user: root
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6
      - REDIS_CLUSTER_REPLICAS=1
    volumes:
      - redis6:/bitnami/redis/data
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093

    networks:
      - app-network

  # -----------------------
  # Backend Service
  # -----------------------
  chat_app_backend:
    build:
      context: ./chat-app
      dockerfile: Dockerfile
    environment:
      - PORT=5000
      - REDIS_HOST_1=redis1
      - REDIS_PORT_1=6379
      - REDIS_HOST_2=redis2
      - REDIS_PORT_2=6379
      - REDIS_HOST_3=redis3
      - REDIS_PORT_3=6379
      - REDIS_HOST_4=redis4
      - REDIS_PORT_4=6379
      - REDIS_HOST_5=redis5
      - REDIS_PORT_5=6379
      - REDIS_HOST_6=redis6
      - REDIS_PORT_6=6379
      - MONGO_URI=mongodb+srv://22521430:Kkm52YAVXP6YptF@chatapp.o5z7l.mongodb.net/?retryWrites=true&w=majority&appName=chatapp
    depends_on:
      - redis1
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - app-network
  # -----------------------
  # API Gateway Service
  # -----------------------
  api_gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    environment:
      - PORT=3000
      - CHAT_SERVICE_URL=http://chat_app_backend:5000
      - NODE_ENV=production
    depends_on:
      - chat_app_backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - app-network

# Common network for all services
networks:
  app-network:
    driver: bridge

volumes:
  redis1:
  redis2:
  redis3:
  redis4:
  redis5:
  redis6: