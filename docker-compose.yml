services:
  # -----------------------
  # Redis Cluster Nodes
  # -----------------------
  redis1:
    image: redis:6.2-alpine
    container_name: redis1
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis1-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6379:6379" # client port
      - "16379:16379" # cluster bus port
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis1
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis2:
    image: redis:6.2-alpine
    container_name: redis2
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis2-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6380:6379"
      - "16380:16379"
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis2
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis3:
    image: redis:6.2-alpine
    container_name: redis3
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis3-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6381:6379"
      - "16381:16379"
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis3
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis4:
    image: redis:6.2-alpine
    container_name: redis4
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis4-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6382:6379"
      - "16382:16379"
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis4
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis5:
    image: redis:6.2-alpine
    container_name: redis5
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis5-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6383:6379"
      - "16383:16379"
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis5
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis6:
    image: redis:6.2-alpine
    container_name: redis6
    volumes:
      - ./redis.conf:/conf/redis.conf
      - redis6-data:/data
    command: ["redis-server", "/conf/redis.conf"]
    ports:
      - "6384:6379"
      - "16384:16379"
    environment:
      - REDIS_CLUSTER_ANNOUNCE_IP=redis6
      - REDIS_CLUSTER_ANNOUNCE_PORT=6379
      - REDIS_CLUSTER_ANNOUNCE_BUS_PORT=16379
    networks:
      - app-network

  redis-cluster-init:
    image: redis:6.2-alpine
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
      - redis6
    command: >
      sh -c "
        sleep 10 && 
        redis-cli --cluster create redis1:6379 redis2:6379 redis3:6379 redis4:6379 redis5:6379 redis6:6379 --cluster-replicas 1 --cluster-yes
      "
    networks:
      - app-network

  # -----------------------
  # Kafka Services
  # -----------------------
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:29092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=chat_messages:1:1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
    networks:
      - app-network

  # -----------------------
  # Backend Service
  # -----------------------
  chat_app_backend:
    build:
      context: ./chat-app
      dockerfile: Dockerfile
    ports:
      - "8080:5000"
    environment:
      - PORT=5000
      - REDIS_HOST_1=redis1
      - REDIS_PORT_1=6379
      - REDIS_HOST_2=redis2
      - REDIS_PORT_2=6379
      - REDIS_HOST_3=redis3
      - REDIS_PORT_3=6379
      - REDIS_HOST_4=redis4
      - REDIS_PORT_4=6379
      - REDIS_HOST_5=redis5
      - REDIS_PORT_5=6379
      - REDIS_HOST_6=redis6
      - REDIS_PORT_6=6379
      - MONGO_URI=mongodb+srv://22521430:Kkm52YAVXP6YptF@chatapp.o5z7l.mongodb.net/?retryWrites=true&w=majority&appName=chatapp
    volumes:
      - ./chat-app:/app
      - /app/node_modules
    depends_on:
      - redis-cluster-init
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - app-network
  # -----------------------
  # API Gateway Service
  # -----------------------
  api_gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    environment:
      - PORT=3000
      - CHAT_SERVICE_URL=http://chat_app_backend:5000
      - NODE_ENV=production
    depends_on:
      - chat_app_backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - app-network

# Persistent volumes for Redis
volumes:
  redis1-data:
  redis2-data:
  redis3-data:
  redis4-data:
  redis5-data:
  redis6-data:

# Common network for all services
networks:
  app-network:
    driver: bridge
