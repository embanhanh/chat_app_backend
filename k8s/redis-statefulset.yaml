apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      securityContext:
        runAsUser: 0  # Running as root as in original docker-compose
      containers:
      - name: redis
        image: docker.io/bitnami/redis-cluster:7.4
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: cluster
        envFrom:
        - configMapRef:
            name: redis-cluster-config
        env:
        - name: REDIS_CLUSTER_CREATOR
          value: "yes"
          # Only the first pod will have CLUSTER_CREATOR set to yes
          # We use an init container in practice to handle this correctly
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis/data
        lifecycle:
          postStart:
            exec:
              # This script sets REDIS_CLUSTER_CREATOR=yes only on redis-0
              command: 
              - /bin/sh
              - -c
              - |
                if [ "$(hostname)" != "redis-0" ]; then
                  echo "Not the first pod, unsetting REDIS_CLUSTER_CREATOR"
                  unset REDIS_CLUSTER_CREATOR
                fi
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi